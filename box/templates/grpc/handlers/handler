// Package handlers contains all http restful handlers
// Author : readyGo "JitenP@Outlook.Com"
// This code is generated by readyGo. You are free to make amendments as and where required
package handlers

import (
	"context"
	"{{.Project}}/interfaces"
	"{{.Project}}/models"
	pbc "{{.Project}}/protos/commonpb"
	pb "{{.Project}}/protos/{{.Model.Name | ToLower}}pb"

	"flag"

	"github.com/golang/glog"
)

// {{.Model.Name}} type used as a container for db interface and receiver for handler functions
type {{.Model.Name}} struct {
	I{{.Model.Name}} interfaces.{{.Model.Name}}Interface
}


func init() {
	flag.Parse()
	flag.Lookup("logtostderr").Value.Set("true")
}

// Create{{.Model.Name}} is to create object
func ({{.Model.Name | Initial}} *{{.Model.Name}}) Create{{.Model.Name}}(ctx context.Context, in *pb.{{.Model.Name}}) (*pbc.GeneralResponse, error) {
	{{.Model.Name | ToLower}} := &models.{{.Model.Name}}{}
	{{ $ModelName := .Model.Name }}
	{{- range .Model.Fields }}
	{{$ModelName | ToLower}}.{{.Name}}=in.{{.Name}}
	{{- end}}
	out := &pbc.GeneralResponse{}
	if err := models.Validate{{.Model.Name}}({{.Model.Name | ToLower}}); err != nil {
		glog.Error(err)
		return nil, err
	}

	result,err:={{.Model.Name | Initial}}.I{{.Model.Name}}.Create{{.Model.Name}}({{.Model.Name | ToLower}});
	if err!=nil{
		glog.Info(err)
		return nil, err
	}
	out.Code = 201
	out.Message = result
	return out, nil
}
